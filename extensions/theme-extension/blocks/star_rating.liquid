
<style>

  .instagram-feed {
  width: 100%;
  padding: 20px;
}

.image-grid {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  gap: 20px;
  overflow-x: auto;
  padding: 10px;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}
.instagram-post {
  width: 150px;
  height: 150px;
  border-radius: 12px;
  overflow: hidden;
  position: relative;
}

.media-container { height: 100%; }
.media-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.post-details {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.7);
  padding: 8px;
  color: white;
  transform: translateY(100%);
  transition: transform 0.3s ease;
}

.instagram-post:hover .post-details {
  transform: translateY(0);
}

.username {
  color: white;
  text-decoration: none;
  font-weight: bold;
}

.caption {
  font-size: 12px;
  margin: 4px 0 0;
}
</style>

<div class="instagram-feed">
  <div class="image-grid">
    
  </div>
  </div>
<script defer>

  document.addEventListener('DOMContentLoaded', async ()=>{

    const container = document.querySelector('.instagram-feed');
    const postContainer = document.getElementById('instagram-posts');
    const header = container.querySelector('.header');
    const Grid = document.querySelector('.image-grid');

  

    const responseData = await fetchAllPost();
    const {test} = responseData;
    displayContent(test, Grid);
  })


  function displayContent(posts, Grid){
    posts.forEach(post => {
      Grid.insertAdjacentHTML("beforeend", postStructure(post));
    })
  }

  function postStructure(post){
    return `<div class="instagram-post image-circle" id=${post.id}>
    <div class="media-container">
      <img src="${post.thumbnailUrl}"/>
    </div>
    <div class="post-details">
      <a href="${post.permalink}" target="_blank" class="username">@${post.username}</a>
      <p class="caption">${post.caption}</p>
    </div>
  </div>`;
  }

  async function fetchAllPost(){
      try{
      const response = await fetch(`https://international-versus-knight-terrace.trycloudflare.com/api/fetchPosts`)
      const data = await response.json();
      return data;  

    }catch(err){
      throw err;
    }
  }
  

</script>


{% schema %}
{
  "name": "Star Rating",
  "target": "section",
  "settings": [
    { "type": "product", "id": "product", "label": "product", "autofill": true },
    { "type": "color", "id": "colour", "label": "Star Colour", "default": "#ff0000" }
  ]
}
{% endschema %}
