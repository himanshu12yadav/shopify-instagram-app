// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model InstagramAccount {
  id                    String          @id @default(uuid())
  instagramId           String?         @unique
  instagramUsername     String?         @unique
  instagramToken        String?
  instagramTokenExpires DateTime?
  accountType           String?
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
  posts                 InstagramPost[]
  selectedPosts         SelectedPost[]
}

model InstagramPost {
  id           String           @id @default(uuid()) 
  mediaType    String
  mediaUrl     String
  thumbnailUrl String?
  permalink    String
  timestamp    DateTime
  username     String
  caption      String?
  accountId    String
  account      InstagramAccount @relation(fields: [accountId], references: [id])
  selectedPost SelectedPost?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt

  @@index([accountId])
}

model SelectedPost {
  id              String           @id @default(uuid())
  post            InstagramPost    @relation(fields: [postId], references: [id])
  postId          String           @unique
  account         InstagramAccount @relation(fields: [accountId], references: [id])
  accountId       String
  selectionStatus Boolean          @default(false)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@index([accountId])
  @@index([selectionStatus])
}
